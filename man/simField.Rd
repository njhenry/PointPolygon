% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simField.R
\name{simField}
\alias{simField}
\title{Simulate A continous 2D spatial field using SPDE}
\usage{
simField(N = 60, sigmaE = 1, rangeE = 0.3, shape = NULL, beta0 = 0,
  betaList = list(), link = identity, ...)
}
\arguments{
\item{N}{Number of width pixels for the projection}

\item{sigmaE}{spatial variance}

\item{rangeE}{spatial range}

\item{shape}{polygon object to populate, if NULL unit square is used}

\item{beta0}{itercept term added to all points}

\item{betaList}{list of 2 item lists with a type item which is either random,
cluster, or spatial and a value item which is the beta coefficient.}

\item{link}{link function to apply to the linear combination}

\item{...}{other parameters to pass to mesh}
}
\value{
list, list contains 3 items. Spatial points data frame with raster 
values for transformed linear combination, and beta value. A mesh that was 
used to create the latent field and possibly covariates. The latent field 
itself.
}
\description{
Calculates a continous underlying spatial field for a given
shape and uses an additive model to combine with covariates to create a final
observed field which is a linear combination of covariates their beta values
with an optional link function applied.
}
\examples{
require(tidyr)
require(gridExtra)
require(ar.matrix)
require(dplyr)
require(ggplot2)

unitSim <- simField(
    N = 500, 
    offset = c(0.1, 0.2), 
    max.edge = c(0.05,0.2),
    beta0 = -2,
    betaList = list(
        list(type="random", value=2),
        list(type="spatial", value=-.5),
        list(type="cluster", value=-2)
    ))

plotList <- lapply(c("V1", "V2", "V3", "theta"), function(eff){
    unitSim$spdf@data \%>\%
        dplyr::select(-V0, -z) \%>\%
        gather("Effect", "Value", V1:theta) \%>\%
        filter(Effect==eff) \%>\%
        ggplot(aes(x, y, fill=Value)) +
        geom_raster() +
        coord_equal() +
        theme_void() +
        scale_fill_distiller(palette = "Spectral") +
        ggtitle(eff)
})

do.call(grid.arrange, c(plotList, ncol=2))

usSim <- simField(
    N = 600,
    shape = US.df,
    rangeE = 3,
    offset = c(1, 2),
    max.edge = c(.25, 1))

plot(usSim$mesh)
usSim$spdf@data  \%>\%
    ggplot(aes(x, y, fill=z)) +
    geom_raster() +
    coord_equal() +
    theme_void() +
    scale_fill_distiller(palette = "Spectral")

}
